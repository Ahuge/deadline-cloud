name: Upload Release artifact to GitHub

on:
  release:
    types: [published]

jobs:
  create-release-bundle-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install --upgrade hatch
      - name: Build Package
        id: build-source
        run: |
          mkdir ${GITHUB_WORKSPACE}/artifacts
          hatch -v build
          REF="$(cut -d'+' -f1 <<<"${GITHUB_REF##*/}")"
          cp ${GITHUB_WORKSPACE}/dist/deadline-${REF}-py3-none-any.whl ${GITHUB_WORKSPACE}/dist/deadline-${REF}.tar.gz ${GITHUB_WORKSPACE}/artifacts/
          echo "macos-deadline-whl-path=${GITHUB_WORKSPACE}/artifacts/deadline-${REF}-py3-none-any.whl" >> $GITHUB_OUTPUT
          echo "macos-deadline-tar-path=${GITHUB_WORKSPACE}/artifacts/deadline-${REF}.tar.gz" >> $GITHUB_OUTPUT
      - name: Build depsBundle
        id: build-deps
        env:
          PYTHON_PLATFORM: "macosx_10_9_x86_64"
          PLATFORM: "macos"
        run: |
          python depsBundle.py
          REF="$(cut -d'+' -f1 <<<"${GITHUB_REF##*/}")"
          cp ${GITHUB_WORKSPACE}/dependency_bundle/deadline-deps.zip ${GITHUB_WORKSPACE}/artifacts/deadline-deps-${REF}-${PLATFORM}.zip
          echo "macos-deadline-dependency-path=${GITHUB_WORKSPACE}/artifacts/deadline-deps-${REF}-${PLATFORM}.zip" >> $GITHUB_OUTPUT
      - name: Upload Release Asset
        id: upload-release-asset-macos
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{steps.build-source.outputs.macos-deadline-whl-path}}
            ${{steps.build-source.outputs.macos-deadline-tar-path}}
            ${{steps.build-deps.outputs.macos-deadline-dependency-path}}

  create-release-bundle-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install --upgrade hatch
      - name: Build Package
        id: build-source
        run: |
          New-Item $Env:GITHUB_WORKSPACE/artifacts -ItemType Directory
          cd $Env:GITHUB_WORKSPACE
          hatch -v build
          $REF=$Env:GITHUB_REF.Split("/")[-1].Split("+")[0]
          Copy-Item -Path "$Env:GITHUB_WORKSPACE/dist/deadline-${REF}-py3-none-any.whl" -Destination "$Env:GITHUB_WORKSPACE/artifacts/"
          Copy-Item -Path "$Env:GITHUB_WORKSPACE/dist/deadline-${REF}.tar.gz" -Destination "$Env:GITHUB_WORKSPACE/artifacts/"
          echo "windows-deadline-whl-path=$Env:GITHUB_WORKSPACE\artifacts\deadline-${REF}-py3-none-any.whl" >> $Env:GITHUB_OUTPUT
          echo "windows-deadline-tar-path=$Env:GITHUB_WORKSPACE\artifacts\deadline-${REF}.tar.gz" >> $Env:GITHUB_OUTPUT

      - name: Build depsBundle
        id: build-deps
        env:
          PYTHON_PLATFORM: "win_amd64"
          PLATFORM: "windows"
        run: |
          cd $Env:GITHUB_WORKSPACE
          python depsBundle.py
          $REF=$Env:GITHUB_REF.Split("/")[-1].Split("+")[0]
          Copy-Item -Path "$Env:GITHUB_WORKSPACE/dependency_bundle/deadline-deps.zip" -Destination "$Env:GITHUB_WORKSPACE/artifacts/deadline-deps-${REF}-$Env:PLATFORM.zip"
          dir "$Env:GITHUB_WORKSPACE/artifacts/"
          echo "windows-deadline-dependency-path=$Env:GITHUB_WORKSPACE\artifacts\deadline-deps-${REF}-$Env:PLATFORM.zip" >> $Env:GITHUB_OUTPUT
      - name: Upload Release Asset
        id: upload-release-asset-windows
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{steps.build-source.outputs.windows-deadline-whl-path}}
            ${{steps.build-source.outputs.windows-deadline-tar-path}}
            ${{steps.build-deps.outputs.windows-deadline-dependency-path}}

  create-release-bundle-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install --upgrade hatch
      - name: Build Package
        id: build-source
        run: |
          mkdir ${GITHUB_WORKSPACE}/artifacts
          hatch -v build
          REF="$(cut -d'+' -f1 <<<"${GITHUB_REF##*/}")"
          cp ${GITHUB_WORKSPACE}/dist/deadline-${REF}-py3-none-any.whl ${GITHUB_WORKSPACE}/dist/deadline-${REF}.tar.gz ${GITHUB_WORKSPACE}/artifacts/
          echo "linux-deadline-whl-path=${GITHUB_WORKSPACE}/artifacts/deadline-${REF}-py3-none-any.whl" >> $GITHUB_OUTPUT
          echo "linux-deadline-tar-path=${GITHUB_WORKSPACE}/artifacts/deadline-${REF}.tar.gz" >> $GITHUB_OUTPUT
      - name: Build depsBundle
        id: build-deps
        env:
          PYTHON_PLATFORM: "manylinux2014_x86_64"
          PLATFORM: "linux"
        run: |
          REF="$(cut -d'+' -f1 <<<"${GITHUB_REF##*/}")"
          python depsBundle.py
          cp ${GITHUB_WORKSPACE}/dependency_bundle/deadline-deps.zip ${GITHUB_WORKSPACE}/artifacts/deadline-deps-${REF}-${PLATFORM}.zip
          echo "linux-deadline-dependency-path=${GITHUB_WORKSPACE}/artifacts/deadline-deps-${REF}-${PLATFORM}.zip" >> $GITHUB_OUTPUT
      - name: Upload Release Asset
        id: upload-release-asset-linux
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{steps.build-source.outputs.linux-deadline-whl-path}}
            ${{steps.build-source.outputs.linux-deadline-tar-path}}
            ${{steps.build-deps.outputs.linux-deadline-dependency-path}}
