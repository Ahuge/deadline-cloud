name: Upload Release artifact to GitHub

on:
  release:
    types: [published]

jobs:
  create-release-bundle-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          ref: release
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install --upgrade hatch
      - name: Build Package
        id: build-source
        run: |
          mkdir ${GITHUB_WORKSPACE}/artifacts
          hatch -v build
          cp dist/deadline-${GITHUB_REF##*/}-py3-none-any.whl dist/deadline-${GITHUB_REF##*/}.tar.gz artifacts/
          echo "macos-deadline-whl-path=${GITHUB_WORKSPACE}/artifacts/deadline-${GITHUB_REF##*/}-py3-none-any.whl" >> $GITHUB_OUTPUT
          echo "macos-deadline-tar-path=${GITHUB_WORKSPACE}/artifacts/deadline-${GITHUB_REF##*/}.tar.gz" >> $GITHUB_OUTPUT
      - name: Build depsBundle
        id: build-deps
        env:
          PYTHON_PLATFORM: "macosx_10_9_x86_64"
          PLATFORM: "macos"
        run: |
          mkdir ${GITHUB_WORKSPACE}/artifacts
          python depsBundle.py
          cp dependency_bundle/deadline-deps.zip artifacts/deadline-deps-${GITHUB_REF##*/}-${PLATFORM}.zip
          echo "macos-deadline-dependency-path=${GITHUB_WORKSPACE}/artifacts/deadline-deps-${GITHUB_REF##*/}-${PLATFORM}.zip" >> $GITHUB_OUTPUT
      - name: Upload Release Asset
        id: upload-release-asset-macos
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{steps.build-source.outputs.macos-deadline-whl-path}}
            ${{steps.build-source.outputs.macos-deadline-tar-path}}
            ${{steps.build-deps.outputs.macos-deadline-dependency-path}}

  create-release-bundle-rocky-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          ref: release
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install --upgrade hatch
      - name: Build Package
        id: build-source
        run: |
          mkdir ${GITHUB_WORKSPACE}/artifacts
          hatch -v build
          cp dist/deadline-${GITHUB_REF##*/}-py3-none-any.whl dist/deadline-${GITHUB_REF##*/}.tar.gz artifacts/
          echo "windows-deadline-whl-path=${GITHUB_WORKSPACE}/artifacts/deadline-${GITHUB_REF##*/}-py3-none-any.whl" >> $GITHUB_OUTPUT
          echo "windows-deadline-tar-path=${GITHUB_WORKSPACE}/artifacts/deadline-${GITHUB_REF##*/}.tar.gz" >> $GITHUB_OUTPUT
      - name: Build depsBundle Rocky
        id: build-deps
        uses: ./.github/actions/rocky-linux-action
        with:
          context: .
        env:
          COMMAND: python depsBundle.py
          OUTPUT_FILE: dependency_bundle/deadline-deps.zip
      - name: Build depsBundle
        id: build-deps
        env:
          PYTHON_PLATFORM: "win_amd64"
          PLATFORM: "windows"
        run: |
          mkdir ${GITHUB_WORKSPACE}/artifacts
          python depsBundle.py
          cp dependency_bundle/deadline-deps.zip artifacts/deadline-deps-${GITHUB_REF##*/}-${PLATFORM}.zip
          echo "windows-deadline-dependency-path=${GITHUB_WORKSPACE}/artifacts/deadline-deps-${GITHUB_REF##*/}-${PLATFORM}.zip" >> $GITHUB_OUTPUT
      - name: Upload Release Asset
        id: upload-release-asset-windows
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{steps.build-source.outputs.windows-deadline-whl-path}}
            ${{steps.build-source.outputs.windows-deadline-tar-path}}
            ${{steps.build-deps.outputs.windows-deadline-dependency-path}}